# ===============================
# = DATA SOURCE
# ===============================

spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/interview
#spring.datasource.url = jdbc:mysql://172.19.18.240:3306dd/qa_testdb
#spring.datasource.url = jdbc:mysql://172.19.18.236:3306/ca_qadb


# Username and password
#spring.datasource.username = 
#spring.datasource.password = Qadev@123
spring.datasource.username = root
spring.datasource.password = root
 
 server.port: 8090
 
#user.oauth.clientId=729282316853-sqvppj68jdi4h2nkj629p2p6d22s5hj5.apps.googleusercontent.com
#user.oauth.clientSecret=PfLzKwene81XaMANnMYiQyss
#user.oauth.user.username=root
#user.oauth.user.password=
#user.oauth.redirectUris=http://localhost:8090/login
#server.servlet.context-path:/auth


# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1 from dual

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



#============================= For Logging | BEG ====================================
# = Logging

# Level for loggers on classes inside the root package (and its 
# sub-packages). 
# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.com.theorem = DEBUG

# Fine-tuning a specific logger (for a single class)
# logging.level.com.theorem.controllers.HomeController = TRACE

# Specify the level for spring boot and hibernate's loggers
logging.level.org.springframework.web = DEBUG
logging.level.org.hibernate = ERROR

#Log file location (in addition to the console)
#logging.file = d:/var/logs/ca-logs.log
logging.file = /opt/log/ca-logs.log

#============================= For Logging | END ====================================

spring.http.multipart.max-file-size=100MB
spring.http.multipart.max-request-size=100MB

#==========================DFP Details===========================================
# If you are using a service account, specify the path to the JSON
# key file instead of using the above authentication properties.
#api.dfp.jsonKeyFilePath=D:\\tasam-ed7591b58115.json

# Any application name of your choosing.
#api.dfp.applicationName=caapp

# The header networkCode is needed for every request except
# NetworkService.makeTestNetwork and NetworkService.getAllNetworks. Comment
# out the line below when calling either of those methods.
#api.dfp.networkCode=5910